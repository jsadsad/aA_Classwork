{"version":3,"sources":["./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,8B;;;;;;UChDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACrBA,sBAAsB,mBAAO,EAAE,oDAAiB;;AAEhD;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL,GAAG","file":"bundle.js","sourcesContent":["class FollowToggle {\n    constructor($el) {\n        this.$el = $el //saves as instance \n        this.userId = $el.data(\"user-id\");\n        this.followState = $el.data(\"follow-state\");\n        this.render()\n    }\n\n    // events when user clicks on follow or unfollow go here\n    handleClick() {\n    //     Prevent the default action.\n    //     Make a $.ajax request to POST /users/: id / follow if we are not following the user(check followState), \n    // else, it should make a DELETE request.\n    // On success of the POST / DELETE, we should toggle the followState and re - render.\n\n        const $el = $('button.follow-toggle')\n\n        $el.on('click', (e) => {\n            e.preventDefault()\n            if(e.followState === 'followed'){\n                e.followState = 'unfollowed';\n                $ajax({\n                    method: \"DELETE\",\n                    url: `/user_follow/${this.userId}`,\n                    dataType: \"json\"\n                })\n            } else {\n                e.followState = 'followed'\n                $ajax({\n                    method: \"POST\",\n                    url: `/user_follow/${this.userId}`,\n                    dataType: \"json\"\n                })\n            }\n        });\n    }\n\n    render() {\n        //where we will display \"Follow\" or \"Unfollow\" depending if user follows already\n        const $el = $('button.follow-toggle')\n        if ($el.followState === 'followed') {\n            $el.text(\"Unfollow\")\n        } else {\n            $el.text(\"Follow\")\n        }\n    }\n}\n\nmodule.exports = FollowToggle;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n"," const FollowToggle = require (\"./follow_toggle\");\n\n $(() => {\n\n    const $toggleButton = $('button.follow-toggle');\n    \n    $toggleButton.each((idx, htmlEle) => {\n        new FollowToggle($(htmlEle));\n    });\n    \n  });\n"],"sourceRoot":""}